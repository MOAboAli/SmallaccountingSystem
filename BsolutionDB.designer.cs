#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BsolutionWebApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CMS")]
	public partial class BsolutionDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBank_Name(Bank_Name instance);
    partial void UpdateBank_Name(Bank_Name instance);
    partial void DeleteBank_Name(Bank_Name instance);
    partial void InsertCash_Type(Cash_Type instance);
    partial void UpdateCash_Type(Cash_Type instance);
    partial void DeleteCash_Type(Cash_Type instance);
    partial void InsertContat_T(Contat_T instance);
    partial void UpdateContat_T(Contat_T instance);
    partial void DeleteContat_T(Contat_T instance);
    partial void InsertDiscountInvoice2(DiscountInvoice2 instance);
    partial void UpdateDiscountInvoice2(DiscountInvoice2 instance);
    partial void DeleteDiscountInvoice2(DiscountInvoice2 instance);
    partial void InsertExpenses_Type(Expenses_Type instance);
    partial void UpdateExpenses_Type(Expenses_Type instance);
    partial void DeleteExpenses_Type(Expenses_Type instance);
    partial void InsertInvoice_Detail(Invoice_Detail instance);
    partial void UpdateInvoice_Detail(Invoice_Detail instance);
    partial void DeleteInvoice_Detail(Invoice_Detail instance);
    partial void InsertInvoice_Serial_Collect(Invoice_Serial_Collect instance);
    partial void UpdateInvoice_Serial_Collect(Invoice_Serial_Collect instance);
    partial void DeleteInvoice_Serial_Collect(Invoice_Serial_Collect instance);
    partial void InsertInvoice_T(Invoice_T instance);
    partial void UpdateInvoice_T(Invoice_T instance);
    partial void DeleteInvoice_T(Invoice_T instance);
    partial void InsertInvoiceTax(InvoiceTax instance);
    partial void UpdateInvoiceTax(InvoiceTax instance);
    partial void DeleteInvoiceTax(InvoiceTax instance);
    partial void InsertItem_Type(Item_Type instance);
    partial void UpdateItem_Type(Item_Type instance);
    partial void DeleteItem_Type(Item_Type instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertStock(Stock instance);
    partial void UpdateStock(Stock instance);
    partial void DeleteStock(Stock instance);
    partial void InsertTax(Tax instance);
    partial void UpdateTax(Tax instance);
    partial void DeleteTax(Tax instance);
    partial void InsertTotal_Transation(Total_Transation instance);
    partial void UpdateTotal_Transation(Total_Transation instance);
    partial void DeleteTotal_Transation(Total_Transation instance);
    partial void InsertTransaction_Detail(Transaction_Detail instance);
    partial void UpdateTransaction_Detail(Transaction_Detail instance);
    partial void DeleteTransaction_Detail(Transaction_Detail instance);
    partial void InsertTransaction_Type(Transaction_Type instance);
    partial void UpdateTransaction_Type(Transaction_Type instance);
    partial void DeleteTransaction_Type(Transaction_Type instance);
    partial void InsertCash(Cash instance);
    partial void UpdateCash(Cash instance);
    partial void DeleteCash(Cash instance);
    partial void InsertBank(Bank instance);
    partial void UpdateBank(Bank instance);
    partial void DeleteBank(Bank instance);
    partial void InsertCheque(Cheque instance);
    partial void UpdateCheque(Cheque instance);
    partial void DeleteCheque(Cheque instance);
    partial void InsertCollecting(Collecting instance);
    partial void UpdateCollecting(Collecting instance);
    partial void DeleteCollecting(Collecting instance);
    partial void InsertScript(Script instance);
    partial void UpdateScript(Script instance);
    partial void DeleteScript(Script instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertExpense(Expense instance);
    partial void UpdateExpense(Expense instance);
    partial void DeleteExpense(Expense instance);
    partial void InsertContact2(Contact2 instance);
    partial void UpdateContact2(Contact2 instance);
    partial void DeleteContact2(Contact2 instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertPagewUser(PagewUser instance);
    partial void UpdatePagewUser(PagewUser instance);
    partial void DeletePagewUser(PagewUser instance);
    partial void InsertPage2(Page2 instance);
    partial void UpdatePage2(Page2 instance);
    partial void DeletePage2(Page2 instance);
    #endregion
		
		public BsolutionDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CMSConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BsolutionDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BsolutionDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BsolutionDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BsolutionDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Bank_Name> Bank_Names
		{
			get
			{
				return this.GetTable<Bank_Name>();
			}
		}
		
		public System.Data.Linq.Table<Cash_Type> Cash_Types
		{
			get
			{
				return this.GetTable<Cash_Type>();
			}
		}
		
		public System.Data.Linq.Table<Contat_T> Contat_Ts
		{
			get
			{
				return this.GetTable<Contat_T>();
			}
		}
		
		public System.Data.Linq.Table<DiscountInvoice2> DiscountInvoice2s
		{
			get
			{
				return this.GetTable<DiscountInvoice2>();
			}
		}
		
		public System.Data.Linq.Table<Expenses_Type> Expenses_Types
		{
			get
			{
				return this.GetTable<Expenses_Type>();
			}
		}
		
		public System.Data.Linq.Table<Invoice_Detail> Invoice_Details
		{
			get
			{
				return this.GetTable<Invoice_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Invoice_Serial_Collect> Invoice_Serial_Collects
		{
			get
			{
				return this.GetTable<Invoice_Serial_Collect>();
			}
		}
		
		public System.Data.Linq.Table<Invoice_T> Invoice_Ts
		{
			get
			{
				return this.GetTable<Invoice_T>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceTax> InvoiceTaxes
		{
			get
			{
				return this.GetTable<InvoiceTax>();
			}
		}
		
		public System.Data.Linq.Table<Item_Type> Item_Types
		{
			get
			{
				return this.GetTable<Item_Type>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<Stock> Stocks
		{
			get
			{
				return this.GetTable<Stock>();
			}
		}
		
		public System.Data.Linq.Table<Tax> Taxes
		{
			get
			{
				return this.GetTable<Tax>();
			}
		}
		
		public System.Data.Linq.Table<Total_Transation> Total_Transations
		{
			get
			{
				return this.GetTable<Total_Transation>();
			}
		}
		
		public System.Data.Linq.Table<Transaction_Detail> Transaction_Details
		{
			get
			{
				return this.GetTable<Transaction_Detail>();
			}
		}
		
		public System.Data.Linq.Table<Transaction_Type> Transaction_Types
		{
			get
			{
				return this.GetTable<Transaction_Type>();
			}
		}
		
		public System.Data.Linq.Table<Cash> Cashes
		{
			get
			{
				return this.GetTable<Cash>();
			}
		}
		
		public System.Data.Linq.Table<Bank> Banks
		{
			get
			{
				return this.GetTable<Bank>();
			}
		}
		
		public System.Data.Linq.Table<Cheque> Cheques
		{
			get
			{
				return this.GetTable<Cheque>();
			}
		}
		
		public System.Data.Linq.Table<Collecting> Collectings
		{
			get
			{
				return this.GetTable<Collecting>();
			}
		}
		
		public System.Data.Linq.Table<Script> Scripts
		{
			get
			{
				return this.GetTable<Script>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Expense> Expenses
		{
			get
			{
				return this.GetTable<Expense>();
			}
		}
		
		public System.Data.Linq.Table<Contact2> Contact2s
		{
			get
			{
				return this.GetTable<Contact2>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<PagewUser> PagewUsers
		{
			get
			{
				return this.GetTable<PagewUser>();
			}
		}
		
		public System.Data.Linq.Table<Page2> Page2s
		{
			get
			{
				return this.GetTable<Page2>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank_Name")]
	public partial class Bank_Name : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BankName_Id;
		
		private string _Bank_Name1;
		
		private System.DateTime _DateOfOpen;
		
		private string _AccountNo;
		
		private string _Loation;
		
		private string _Phone;
		
		private string _PersonInCharge;
		
		private string _Phone_PersonInCharge;
		
		private string _Bank_Name_Notes;
		
		private System.DateTime _RecTime;
		
		private int _UserId;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBankName_IdChanging(int value);
    partial void OnBankName_IdChanged();
    partial void OnBank_Name1Changing(string value);
    partial void OnBank_Name1Changed();
    partial void OnDateOfOpenChanging(System.DateTime value);
    partial void OnDateOfOpenChanged();
    partial void OnAccountNoChanging(string value);
    partial void OnAccountNoChanged();
    partial void OnLoationChanging(string value);
    partial void OnLoationChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPersonInChargeChanging(string value);
    partial void OnPersonInChargeChanged();
    partial void OnPhone_PersonInChargeChanging(string value);
    partial void OnPhone_PersonInChargeChanged();
    partial void OnBank_Name_NotesChanging(string value);
    partial void OnBank_Name_NotesChanged();
    partial void OnRecTimeChanging(System.DateTime value);
    partial void OnRecTimeChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Bank_Name()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BankName_Id
		{
			get
			{
				return this._BankName_Id;
			}
			set
			{
				if ((this._BankName_Id != value))
				{
					this.OnBankName_IdChanging(value);
					this.SendPropertyChanging();
					this._BankName_Id = value;
					this.SendPropertyChanged("BankName_Id");
					this.OnBankName_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Bank_Name", Storage="_Bank_Name1", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Bank_Name1
		{
			get
			{
				return this._Bank_Name1;
			}
			set
			{
				if ((this._Bank_Name1 != value))
				{
					this.OnBank_Name1Changing(value);
					this.SendPropertyChanging();
					this._Bank_Name1 = value;
					this.SendPropertyChanged("Bank_Name1");
					this.OnBank_Name1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfOpen", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfOpen
		{
			get
			{
				return this._DateOfOpen;
			}
			set
			{
				if ((this._DateOfOpen != value))
				{
					this.OnDateOfOpenChanging(value);
					this.SendPropertyChanging();
					this._DateOfOpen = value;
					this.SendPropertyChanged("DateOfOpen");
					this.OnDateOfOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNo", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string AccountNo
		{
			get
			{
				return this._AccountNo;
			}
			set
			{
				if ((this._AccountNo != value))
				{
					this.OnAccountNoChanging(value);
					this.SendPropertyChanging();
					this._AccountNo = value;
					this.SendPropertyChanged("AccountNo");
					this.OnAccountNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loation", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Loation
		{
			get
			{
				return this._Loation;
			}
			set
			{
				if ((this._Loation != value))
				{
					this.OnLoationChanging(value);
					this.SendPropertyChanging();
					this._Loation = value;
					this.SendPropertyChanged("Loation");
					this.OnLoationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInCharge", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PersonInCharge
		{
			get
			{
				return this._PersonInCharge;
			}
			set
			{
				if ((this._PersonInCharge != value))
				{
					this.OnPersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._PersonInCharge = value;
					this.SendPropertyChanged("PersonInCharge");
					this.OnPersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone_PersonInCharge", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone_PersonInCharge
		{
			get
			{
				return this._Phone_PersonInCharge;
			}
			set
			{
				if ((this._Phone_PersonInCharge != value))
				{
					this.OnPhone_PersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._Phone_PersonInCharge = value;
					this.SendPropertyChanged("Phone_PersonInCharge");
					this.OnPhone_PersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Name_Notes", DbType="NVarChar(MAX)")]
		public string Bank_Name_Notes
		{
			get
			{
				return this._Bank_Name_Notes;
			}
			set
			{
				if ((this._Bank_Name_Notes != value))
				{
					this.OnBank_Name_NotesChanging(value);
					this.SendPropertyChanging();
					this._Bank_Name_Notes = value;
					this.SendPropertyChanged("Bank_Name_Notes");
					this.OnBank_Name_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecTime
		{
			get
			{
				return this._RecTime;
			}
			set
			{
				if ((this._RecTime != value))
				{
					this.OnRecTimeChanging(value);
					this.SendPropertyChanging();
					this._RecTime = value;
					this.SendPropertyChanged("RecTime");
					this.OnRecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cash_Type")]
	public partial class Cash_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cash_Type_Id;
		
		private string _Cash_Type_Name;
		
		private int _UserId;
		
		private System.DateTime _Cash_Type_Rectime;
		
		private int _Cash_Type_Notes;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCash_Type_IdChanging(int value);
    partial void OnCash_Type_IdChanged();
    partial void OnCash_Type_NameChanging(string value);
    partial void OnCash_Type_NameChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCash_Type_RectimeChanging(System.DateTime value);
    partial void OnCash_Type_RectimeChanged();
    partial void OnCash_Type_NotesChanging(int value);
    partial void OnCash_Type_NotesChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Cash_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Type_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cash_Type_Id
		{
			get
			{
				return this._Cash_Type_Id;
			}
			set
			{
				if ((this._Cash_Type_Id != value))
				{
					this.OnCash_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Cash_Type_Id = value;
					this.SendPropertyChanged("Cash_Type_Id");
					this.OnCash_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Type_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Cash_Type_Name
		{
			get
			{
				return this._Cash_Type_Name;
			}
			set
			{
				if ((this._Cash_Type_Name != value))
				{
					this.OnCash_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Cash_Type_Name = value;
					this.SendPropertyChanged("Cash_Type_Name");
					this.OnCash_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Type_Rectime", DbType="DateTime NOT NULL")]
		public System.DateTime Cash_Type_Rectime
		{
			get
			{
				return this._Cash_Type_Rectime;
			}
			set
			{
				if ((this._Cash_Type_Rectime != value))
				{
					this.OnCash_Type_RectimeChanging(value);
					this.SendPropertyChanging();
					this._Cash_Type_Rectime = value;
					this.SendPropertyChanged("Cash_Type_Rectime");
					this.OnCash_Type_RectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Type_Notes", DbType="Int NOT NULL")]
		public int Cash_Type_Notes
		{
			get
			{
				return this._Cash_Type_Notes;
			}
			set
			{
				if ((this._Cash_Type_Notes != value))
				{
					this.OnCash_Type_NotesChanging(value);
					this.SendPropertyChanging();
					this._Cash_Type_Notes = value;
					this.SendPropertyChanged("Cash_Type_Notes");
					this.OnCash_Type_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contat_T")]
	public partial class Contat_T : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Contat_T_Id;
		
		private string _Contat_T_Name;
		
		private System.DateTime _Contat_T_RecTime;
		
		private string _Contat_T_Note;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContat_T_IdChanging(int value);
    partial void OnContat_T_IdChanged();
    partial void OnContat_T_NameChanging(string value);
    partial void OnContat_T_NameChanged();
    partial void OnContat_T_RecTimeChanging(System.DateTime value);
    partial void OnContat_T_RecTimeChanged();
    partial void OnContat_T_NoteChanging(string value);
    partial void OnContat_T_NoteChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Contat_T()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contat_T_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Contat_T_Id
		{
			get
			{
				return this._Contat_T_Id;
			}
			set
			{
				if ((this._Contat_T_Id != value))
				{
					this.OnContat_T_IdChanging(value);
					this.SendPropertyChanging();
					this._Contat_T_Id = value;
					this.SendPropertyChanged("Contat_T_Id");
					this.OnContat_T_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contat_T_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Contat_T_Name
		{
			get
			{
				return this._Contat_T_Name;
			}
			set
			{
				if ((this._Contat_T_Name != value))
				{
					this.OnContat_T_NameChanging(value);
					this.SendPropertyChanging();
					this._Contat_T_Name = value;
					this.SendPropertyChanged("Contat_T_Name");
					this.OnContat_T_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contat_T_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime Contat_T_RecTime
		{
			get
			{
				return this._Contat_T_RecTime;
			}
			set
			{
				if ((this._Contat_T_RecTime != value))
				{
					this.OnContat_T_RecTimeChanging(value);
					this.SendPropertyChanging();
					this._Contat_T_RecTime = value;
					this.SendPropertyChanged("Contat_T_RecTime");
					this.OnContat_T_RecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contat_T_Note", DbType="NVarChar(MAX)")]
		public string Contat_T_Note
		{
			get
			{
				return this._Contat_T_Note;
			}
			set
			{
				if ((this._Contat_T_Note != value))
				{
					this.OnContat_T_NoteChanging(value);
					this.SendPropertyChanging();
					this._Contat_T_Note = value;
					this.SendPropertyChanged("Contat_T_Note");
					this.OnContat_T_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DiscountInvoice")]
	public partial class DiscountInvoice2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DiscountInvoice_Id;
		
		private int _Invoice_Id;
		
		private double _DiscountInvoice_Percentage;
		
		private double _DiscountInvoice_Amount;
		
		private System.DateTime _DiscountInvoice_Date;
		
		private string _DiscountInvoice_Notes;
		
		private System.DateTime _DiscountInvoice_RecTime;
		
		private int _UserID;
		
		private byte _IsFromCollecting;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDiscountInvoice_IdChanging(int value);
    partial void OnDiscountInvoice_IdChanged();
    partial void OnInvoice_IdChanging(int value);
    partial void OnInvoice_IdChanged();
    partial void OnDiscountInvoice_PercentageChanging(double value);
    partial void OnDiscountInvoice_PercentageChanged();
    partial void OnDiscountInvoice_AmountChanging(double value);
    partial void OnDiscountInvoice_AmountChanged();
    partial void OnDiscountInvoice_DateChanging(System.DateTime value);
    partial void OnDiscountInvoice_DateChanged();
    partial void OnDiscountInvoice_NotesChanging(string value);
    partial void OnDiscountInvoice_NotesChanged();
    partial void OnDiscountInvoice_RecTimeChanging(System.DateTime value);
    partial void OnDiscountInvoice_RecTimeChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnIsFromCollectingChanging(byte value);
    partial void OnIsFromCollectingChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public DiscountInvoice2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountInvoice_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DiscountInvoice_Id
		{
			get
			{
				return this._DiscountInvoice_Id;
			}
			set
			{
				if ((this._DiscountInvoice_Id != value))
				{
					this.OnDiscountInvoice_IdChanging(value);
					this.SendPropertyChanging();
					this._DiscountInvoice_Id = value;
					this.SendPropertyChanged("DiscountInvoice_Id");
					this.OnDiscountInvoice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Id", DbType="Int NOT NULL")]
		public int Invoice_Id
		{
			get
			{
				return this._Invoice_Id;
			}
			set
			{
				if ((this._Invoice_Id != value))
				{
					this.OnInvoice_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Id = value;
					this.SendPropertyChanged("Invoice_Id");
					this.OnInvoice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountInvoice_Percentage", DbType="Float NOT NULL")]
		public double DiscountInvoice_Percentage
		{
			get
			{
				return this._DiscountInvoice_Percentage;
			}
			set
			{
				if ((this._DiscountInvoice_Percentage != value))
				{
					this.OnDiscountInvoice_PercentageChanging(value);
					this.SendPropertyChanging();
					this._DiscountInvoice_Percentage = value;
					this.SendPropertyChanged("DiscountInvoice_Percentage");
					this.OnDiscountInvoice_PercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountInvoice_Amount", DbType="Float NOT NULL")]
		public double DiscountInvoice_Amount
		{
			get
			{
				return this._DiscountInvoice_Amount;
			}
			set
			{
				if ((this._DiscountInvoice_Amount != value))
				{
					this.OnDiscountInvoice_AmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountInvoice_Amount = value;
					this.SendPropertyChanged("DiscountInvoice_Amount");
					this.OnDiscountInvoice_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountInvoice_Date", DbType="DateTime NOT NULL")]
		public System.DateTime DiscountInvoice_Date
		{
			get
			{
				return this._DiscountInvoice_Date;
			}
			set
			{
				if ((this._DiscountInvoice_Date != value))
				{
					this.OnDiscountInvoice_DateChanging(value);
					this.SendPropertyChanging();
					this._DiscountInvoice_Date = value;
					this.SendPropertyChanged("DiscountInvoice_Date");
					this.OnDiscountInvoice_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountInvoice_Notes", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DiscountInvoice_Notes
		{
			get
			{
				return this._DiscountInvoice_Notes;
			}
			set
			{
				if ((this._DiscountInvoice_Notes != value))
				{
					this.OnDiscountInvoice_NotesChanging(value);
					this.SendPropertyChanging();
					this._DiscountInvoice_Notes = value;
					this.SendPropertyChanged("DiscountInvoice_Notes");
					this.OnDiscountInvoice_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountInvoice_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime DiscountInvoice_RecTime
		{
			get
			{
				return this._DiscountInvoice_RecTime;
			}
			set
			{
				if ((this._DiscountInvoice_RecTime != value))
				{
					this.OnDiscountInvoice_RecTimeChanging(value);
					this.SendPropertyChanging();
					this._DiscountInvoice_RecTime = value;
					this.SendPropertyChanged("DiscountInvoice_RecTime");
					this.OnDiscountInvoice_RecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFromCollecting", DbType="TinyInt NOT NULL")]
		public byte IsFromCollecting
		{
			get
			{
				return this._IsFromCollecting;
			}
			set
			{
				if ((this._IsFromCollecting != value))
				{
					this.OnIsFromCollectingChanging(value);
					this.SendPropertyChanging();
					this._IsFromCollecting = value;
					this.SendPropertyChanged("IsFromCollecting");
					this.OnIsFromCollectingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expenses_Type")]
	public partial class Expenses_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Expenses_Type_Id;
		
		private string _Expenses_Type_Name;
		
		private int _UserId;
		
		private System.DateTime _Expenses_Type_Rectime;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpenses_Type_IdChanging(int value);
    partial void OnExpenses_Type_IdChanged();
    partial void OnExpenses_Type_NameChanging(string value);
    partial void OnExpenses_Type_NameChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnExpenses_Type_RectimeChanging(System.DateTime value);
    partial void OnExpenses_Type_RectimeChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Expenses_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Type_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Expenses_Type_Id
		{
			get
			{
				return this._Expenses_Type_Id;
			}
			set
			{
				if ((this._Expenses_Type_Id != value))
				{
					this.OnExpenses_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Type_Id = value;
					this.SendPropertyChanged("Expenses_Type_Id");
					this.OnExpenses_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Type_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Expenses_Type_Name
		{
			get
			{
				return this._Expenses_Type_Name;
			}
			set
			{
				if ((this._Expenses_Type_Name != value))
				{
					this.OnExpenses_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Type_Name = value;
					this.SendPropertyChanged("Expenses_Type_Name");
					this.OnExpenses_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Type_Rectime", DbType="DateTime NOT NULL")]
		public System.DateTime Expenses_Type_Rectime
		{
			get
			{
				return this._Expenses_Type_Rectime;
			}
			set
			{
				if ((this._Expenses_Type_Rectime != value))
				{
					this.OnExpenses_Type_RectimeChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Type_Rectime = value;
					this.SendPropertyChanged("Expenses_Type_Rectime");
					this.OnExpenses_Type_RectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice_Details")]
	public partial class Invoice_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Invoice_Details_Id;
		
		private int _Invoice_Id;
		
		private int _Item_ID;
		
		private double _Unit_Cost;
		
		private int _Quantity;
		
		private double _Total_Cost;
		
		private double _Total_Price;
		
		private double _After_Disount_Price;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoice_Details_IdChanging(int value);
    partial void OnInvoice_Details_IdChanged();
    partial void OnInvoice_IdChanging(int value);
    partial void OnInvoice_IdChanged();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnUnit_CostChanging(double value);
    partial void OnUnit_CostChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnTotal_CostChanging(double value);
    partial void OnTotal_CostChanged();
    partial void OnTotal_PriceChanging(double value);
    partial void OnTotal_PriceChanged();
    partial void OnAfter_Disount_PriceChanging(double value);
    partial void OnAfter_Disount_PriceChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Invoice_Detail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Details_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Invoice_Details_Id
		{
			get
			{
				return this._Invoice_Details_Id;
			}
			set
			{
				if ((this._Invoice_Details_Id != value))
				{
					this.OnInvoice_Details_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Details_Id = value;
					this.SendPropertyChanged("Invoice_Details_Id");
					this.OnInvoice_Details_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Id", DbType="Int NOT NULL")]
		public int Invoice_Id
		{
			get
			{
				return this._Invoice_Id;
			}
			set
			{
				if ((this._Invoice_Id != value))
				{
					this.OnInvoice_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Id = value;
					this.SendPropertyChanged("Invoice_Id");
					this.OnInvoice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", DbType="Int NOT NULL")]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit_Cost", DbType="Float NOT NULL")]
		public double Unit_Cost
		{
			get
			{
				return this._Unit_Cost;
			}
			set
			{
				if ((this._Unit_Cost != value))
				{
					this.OnUnit_CostChanging(value);
					this.SendPropertyChanging();
					this._Unit_Cost = value;
					this.SendPropertyChanged("Unit_Cost");
					this.OnUnit_CostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Cost", DbType="Float NOT NULL")]
		public double Total_Cost
		{
			get
			{
				return this._Total_Cost;
			}
			set
			{
				if ((this._Total_Cost != value))
				{
					this.OnTotal_CostChanging(value);
					this.SendPropertyChanging();
					this._Total_Cost = value;
					this.SendPropertyChanged("Total_Cost");
					this.OnTotal_CostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Price", DbType="Float NOT NULL")]
		public double Total_Price
		{
			get
			{
				return this._Total_Price;
			}
			set
			{
				if ((this._Total_Price != value))
				{
					this.OnTotal_PriceChanging(value);
					this.SendPropertyChanging();
					this._Total_Price = value;
					this.SendPropertyChanged("Total_Price");
					this.OnTotal_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_After_Disount_Price", DbType="Float NOT NULL")]
		public double After_Disount_Price
		{
			get
			{
				return this._After_Disount_Price;
			}
			set
			{
				if ((this._After_Disount_Price != value))
				{
					this.OnAfter_Disount_PriceChanging(value);
					this.SendPropertyChanging();
					this._After_Disount_Price = value;
					this.SendPropertyChanged("After_Disount_Price");
					this.OnAfter_Disount_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice_Serial_Collect")]
	public partial class Invoice_Serial_Collect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Invoice_Serial_Collect_Id;
		
		private System.Nullable<int> _Invoice_Serial_Collect_Collecting;
		
		private System.Nullable<int> _USerID;
		
		private System.Nullable<System.DateTime> _LAstModifyDate;
		
		private System.Nullable<int> _Invoice;
		
		private System.Nullable<int> _Collecting;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoice_Serial_Collect_IdChanging(int value);
    partial void OnInvoice_Serial_Collect_IdChanged();
    partial void OnInvoice_Serial_Collect_CollectingChanging(System.Nullable<int> value);
    partial void OnInvoice_Serial_Collect_CollectingChanged();
    partial void OnUSerIDChanging(System.Nullable<int> value);
    partial void OnUSerIDChanged();
    partial void OnLAstModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLAstModifyDateChanged();
    partial void OnInvoiceChanging(System.Nullable<int> value);
    partial void OnInvoiceChanged();
    partial void OnCollectingChanging(System.Nullable<int> value);
    partial void OnCollectingChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Invoice_Serial_Collect()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Serial_Collect_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Invoice_Serial_Collect_Id
		{
			get
			{
				return this._Invoice_Serial_Collect_Id;
			}
			set
			{
				if ((this._Invoice_Serial_Collect_Id != value))
				{
					this.OnInvoice_Serial_Collect_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Serial_Collect_Id = value;
					this.SendPropertyChanged("Invoice_Serial_Collect_Id");
					this.OnInvoice_Serial_Collect_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Serial_Collect_Collecting", DbType="Int")]
		public System.Nullable<int> Invoice_Serial_Collect_Collecting
		{
			get
			{
				return this._Invoice_Serial_Collect_Collecting;
			}
			set
			{
				if ((this._Invoice_Serial_Collect_Collecting != value))
				{
					this.OnInvoice_Serial_Collect_CollectingChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Serial_Collect_Collecting = value;
					this.SendPropertyChanged("Invoice_Serial_Collect_Collecting");
					this.OnInvoice_Serial_Collect_CollectingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USerID", DbType="Int")]
		public System.Nullable<int> USerID
		{
			get
			{
				return this._USerID;
			}
			set
			{
				if ((this._USerID != value))
				{
					this.OnUSerIDChanging(value);
					this.SendPropertyChanging();
					this._USerID = value;
					this.SendPropertyChanged("USerID");
					this.OnUSerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAstModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LAstModifyDate
		{
			get
			{
				return this._LAstModifyDate;
			}
			set
			{
				if ((this._LAstModifyDate != value))
				{
					this.OnLAstModifyDateChanging(value);
					this.SendPropertyChanging();
					this._LAstModifyDate = value;
					this.SendPropertyChanged("LAstModifyDate");
					this.OnLAstModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice", DbType="Int")]
		public System.Nullable<int> Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting", DbType="Int")]
		public System.Nullable<int> Collecting
		{
			get
			{
				return this._Collecting;
			}
			set
			{
				if ((this._Collecting != value))
				{
					this.OnCollectingChanging(value);
					this.SendPropertyChanging();
					this._Collecting = value;
					this.SendPropertyChanged("Collecting");
					this.OnCollectingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice_T")]
	public partial class Invoice_T : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Invoice_T_Id;
		
		private string _Invoice_T_Name;
		
		private System.DateTime _Invoice_T_Rectime;
		
		private string _Invoice_T_Note;
		
		private byte _Invoice_T_PayOrGain;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoice_T_IdChanging(int value);
    partial void OnInvoice_T_IdChanged();
    partial void OnInvoice_T_NameChanging(string value);
    partial void OnInvoice_T_NameChanged();
    partial void OnInvoice_T_RectimeChanging(System.DateTime value);
    partial void OnInvoice_T_RectimeChanged();
    partial void OnInvoice_T_NoteChanging(string value);
    partial void OnInvoice_T_NoteChanged();
    partial void OnInvoice_T_PayOrGainChanging(byte value);
    partial void OnInvoice_T_PayOrGainChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Invoice_T()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_T_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Invoice_T_Id
		{
			get
			{
				return this._Invoice_T_Id;
			}
			set
			{
				if ((this._Invoice_T_Id != value))
				{
					this.OnInvoice_T_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_T_Id = value;
					this.SendPropertyChanged("Invoice_T_Id");
					this.OnInvoice_T_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_T_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Invoice_T_Name
		{
			get
			{
				return this._Invoice_T_Name;
			}
			set
			{
				if ((this._Invoice_T_Name != value))
				{
					this.OnInvoice_T_NameChanging(value);
					this.SendPropertyChanging();
					this._Invoice_T_Name = value;
					this.SendPropertyChanged("Invoice_T_Name");
					this.OnInvoice_T_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_T_Rectime", DbType="DateTime NOT NULL")]
		public System.DateTime Invoice_T_Rectime
		{
			get
			{
				return this._Invoice_T_Rectime;
			}
			set
			{
				if ((this._Invoice_T_Rectime != value))
				{
					this.OnInvoice_T_RectimeChanging(value);
					this.SendPropertyChanging();
					this._Invoice_T_Rectime = value;
					this.SendPropertyChanged("Invoice_T_Rectime");
					this.OnInvoice_T_RectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_T_Note", DbType="NVarChar(MAX)")]
		public string Invoice_T_Note
		{
			get
			{
				return this._Invoice_T_Note;
			}
			set
			{
				if ((this._Invoice_T_Note != value))
				{
					this.OnInvoice_T_NoteChanging(value);
					this.SendPropertyChanging();
					this._Invoice_T_Note = value;
					this.SendPropertyChanged("Invoice_T_Note");
					this.OnInvoice_T_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_T_PayOrGain", DbType="TinyInt NOT NULL")]
		public byte Invoice_T_PayOrGain
		{
			get
			{
				return this._Invoice_T_PayOrGain;
			}
			set
			{
				if ((this._Invoice_T_PayOrGain != value))
				{
					this.OnInvoice_T_PayOrGainChanging(value);
					this.SendPropertyChanging();
					this._Invoice_T_PayOrGain = value;
					this.SendPropertyChanged("Invoice_T_PayOrGain");
					this.OnInvoice_T_PayOrGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceTax")]
	public partial class InvoiceTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvoiceTax_Id;
		
		private double _InvoiceTax_Percentage;
		
		private double _InvoiceTax_Amount;
		
		private int _Invoice_ID;
		
		private int _Tax_Id;
		
		private int _UserId;
		
		private System.DateTime _InvoiceTax_RecTime;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoiceTax_IdChanging(int value);
    partial void OnInvoiceTax_IdChanged();
    partial void OnInvoiceTax_PercentageChanging(double value);
    partial void OnInvoiceTax_PercentageChanged();
    partial void OnInvoiceTax_AmountChanging(double value);
    partial void OnInvoiceTax_AmountChanged();
    partial void OnInvoice_IDChanging(int value);
    partial void OnInvoice_IDChanged();
    partial void OnTax_IdChanging(int value);
    partial void OnTax_IdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnInvoiceTax_RecTimeChanging(System.DateTime value);
    partial void OnInvoiceTax_RecTimeChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public InvoiceTax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTax_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvoiceTax_Id
		{
			get
			{
				return this._InvoiceTax_Id;
			}
			set
			{
				if ((this._InvoiceTax_Id != value))
				{
					this.OnInvoiceTax_IdChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTax_Id = value;
					this.SendPropertyChanged("InvoiceTax_Id");
					this.OnInvoiceTax_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTax_Percentage", DbType="Float NOT NULL")]
		public double InvoiceTax_Percentage
		{
			get
			{
				return this._InvoiceTax_Percentage;
			}
			set
			{
				if ((this._InvoiceTax_Percentage != value))
				{
					this.OnInvoiceTax_PercentageChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTax_Percentage = value;
					this.SendPropertyChanged("InvoiceTax_Percentage");
					this.OnInvoiceTax_PercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTax_Amount", DbType="Float NOT NULL")]
		public double InvoiceTax_Amount
		{
			get
			{
				return this._InvoiceTax_Amount;
			}
			set
			{
				if ((this._InvoiceTax_Amount != value))
				{
					this.OnInvoiceTax_AmountChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTax_Amount = value;
					this.SendPropertyChanged("InvoiceTax_Amount");
					this.OnInvoiceTax_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_ID", DbType="Int NOT NULL")]
		public int Invoice_ID
		{
			get
			{
				return this._Invoice_ID;
			}
			set
			{
				if ((this._Invoice_ID != value))
				{
					this.OnInvoice_IDChanging(value);
					this.SendPropertyChanging();
					this._Invoice_ID = value;
					this.SendPropertyChanged("Invoice_ID");
					this.OnInvoice_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax_Id", DbType="Int NOT NULL")]
		public int Tax_Id
		{
			get
			{
				return this._Tax_Id;
			}
			set
			{
				if ((this._Tax_Id != value))
				{
					this.OnTax_IdChanging(value);
					this.SendPropertyChanging();
					this._Tax_Id = value;
					this.SendPropertyChanged("Tax_Id");
					this.OnTax_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceTax_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime InvoiceTax_RecTime
		{
			get
			{
				return this._InvoiceTax_RecTime;
			}
			set
			{
				if ((this._InvoiceTax_RecTime != value))
				{
					this.OnInvoiceTax_RecTimeChanging(value);
					this.SendPropertyChanging();
					this._InvoiceTax_RecTime = value;
					this.SendPropertyChanged("InvoiceTax_RecTime");
					this.OnInvoiceTax_RecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item_Type")]
	public partial class Item_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_Type1;
		
		private string _Item_Type_Name;
		
		private int _UserId;
		
		private System.DateTime _RecTime;
		
		private string _Item_Type_Notes;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_Type1Changing(int value);
    partial void OnItem_Type1Changed();
    partial void OnItem_Type_NameChanging(string value);
    partial void OnItem_Type_NameChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRecTimeChanging(System.DateTime value);
    partial void OnRecTimeChanged();
    partial void OnItem_Type_NotesChanging(string value);
    partial void OnItem_Type_NotesChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Item_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Item_Type", Storage="_Item_Type1", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Item_Type1
		{
			get
			{
				return this._Item_Type1;
			}
			set
			{
				if ((this._Item_Type1 != value))
				{
					this.OnItem_Type1Changing(value);
					this.SendPropertyChanging();
					this._Item_Type1 = value;
					this.SendPropertyChanged("Item_Type1");
					this.OnItem_Type1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Type_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Item_Type_Name
		{
			get
			{
				return this._Item_Type_Name;
			}
			set
			{
				if ((this._Item_Type_Name != value))
				{
					this.OnItem_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Item_Type_Name = value;
					this.SendPropertyChanged("Item_Type_Name");
					this.OnItem_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecTime
		{
			get
			{
				return this._RecTime;
			}
			set
			{
				if ((this._RecTime != value))
				{
					this.OnRecTimeChanging(value);
					this.SendPropertyChanging();
					this._RecTime = value;
					this.SendPropertyChanged("RecTime");
					this.OnRecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Type_Notes", DbType="NVarChar(MAX)")]
		public string Item_Type_Notes
		{
			get
			{
				return this._Item_Type_Notes;
			}
			set
			{
				if ((this._Item_Type_Notes != value))
				{
					this.OnItem_Type_NotesChanging(value);
					this.SendPropertyChanging();
					this._Item_Type_Notes = value;
					this.SendPropertyChanged("Item_Type_Notes");
					this.OnItem_Type_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Items_Id;
		
		private string _Items_Name;
		
		private string _Items_Notes;
		
		private double _Items_Price;
		
		private int _Contact_Id;
		
		private int _Type_Id;
		
		private int _User_Id;
		
		private System.DateTime _RecTime;
		
		private int _HasStock;
		
		private double _AverageCost;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItems_IdChanging(int value);
    partial void OnItems_IdChanged();
    partial void OnItems_NameChanging(string value);
    partial void OnItems_NameChanged();
    partial void OnItems_NotesChanging(string value);
    partial void OnItems_NotesChanged();
    partial void OnItems_PriceChanging(double value);
    partial void OnItems_PriceChanged();
    partial void OnContact_IdChanging(int value);
    partial void OnContact_IdChanged();
    partial void OnType_IdChanging(int value);
    partial void OnType_IdChanged();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnRecTimeChanging(System.DateTime value);
    partial void OnRecTimeChanged();
    partial void OnHasStockChanging(int value);
    partial void OnHasStockChanged();
    partial void OnAverageCostChanging(double value);
    partial void OnAverageCostChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Items_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Items_Id
		{
			get
			{
				return this._Items_Id;
			}
			set
			{
				if ((this._Items_Id != value))
				{
					this.OnItems_IdChanging(value);
					this.SendPropertyChanging();
					this._Items_Id = value;
					this.SendPropertyChanged("Items_Id");
					this.OnItems_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Items_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Items_Name
		{
			get
			{
				return this._Items_Name;
			}
			set
			{
				if ((this._Items_Name != value))
				{
					this.OnItems_NameChanging(value);
					this.SendPropertyChanging();
					this._Items_Name = value;
					this.SendPropertyChanged("Items_Name");
					this.OnItems_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Items_Notes", DbType="NVarChar(MAX)")]
		public string Items_Notes
		{
			get
			{
				return this._Items_Notes;
			}
			set
			{
				if ((this._Items_Notes != value))
				{
					this.OnItems_NotesChanging(value);
					this.SendPropertyChanging();
					this._Items_Notes = value;
					this.SendPropertyChanged("Items_Notes");
					this.OnItems_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Items_Price", DbType="Float NOT NULL")]
		public double Items_Price
		{
			get
			{
				return this._Items_Price;
			}
			set
			{
				if ((this._Items_Price != value))
				{
					this.OnItems_PriceChanging(value);
					this.SendPropertyChanging();
					this._Items_Price = value;
					this.SendPropertyChanged("Items_Price");
					this.OnItems_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Id", DbType="Int NOT NULL")]
		public int Contact_Id
		{
			get
			{
				return this._Contact_Id;
			}
			set
			{
				if ((this._Contact_Id != value))
				{
					this.OnContact_IdChanging(value);
					this.SendPropertyChanging();
					this._Contact_Id = value;
					this.SendPropertyChanged("Contact_Id");
					this.OnContact_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_Id", DbType="Int NOT NULL")]
		public int Type_Id
		{
			get
			{
				return this._Type_Id;
			}
			set
			{
				if ((this._Type_Id != value))
				{
					this.OnType_IdChanging(value);
					this.SendPropertyChanging();
					this._Type_Id = value;
					this.SendPropertyChanged("Type_Id");
					this.OnType_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL")]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecTime
		{
			get
			{
				return this._RecTime;
			}
			set
			{
				if ((this._RecTime != value))
				{
					this.OnRecTimeChanging(value);
					this.SendPropertyChanging();
					this._RecTime = value;
					this.SendPropertyChanged("RecTime");
					this.OnRecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasStock", DbType="Int NOT NULL")]
		public int HasStock
		{
			get
			{
				return this._HasStock;
			}
			set
			{
				if ((this._HasStock != value))
				{
					this.OnHasStockChanging(value);
					this.SendPropertyChanging();
					this._HasStock = value;
					this.SendPropertyChanged("HasStock");
					this.OnHasStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageCost", DbType="Float NOT NULL")]
		public double AverageCost
		{
			get
			{
				return this._AverageCost;
			}
			set
			{
				if ((this._AverageCost != value))
				{
					this.OnAverageCostChanging(value);
					this.SendPropertyChanging();
					this._AverageCost = value;
					this.SendPropertyChanged("AverageCost");
					this.OnAverageCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stock")]
	public partial class Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Stock_ID;
		
		private int _Stock_Quantity;
		
		private System.DateTime _LastModifyDate;
		
		private int _Last_UserId;
		
		private int _Item_Id;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStock_IDChanging(int value);
    partial void OnStock_IDChanged();
    partial void OnStock_QuantityChanging(int value);
    partial void OnStock_QuantityChanged();
    partial void OnLastModifyDateChanging(System.DateTime value);
    partial void OnLastModifyDateChanged();
    partial void OnLast_UserIdChanging(int value);
    partial void OnLast_UserIdChanged();
    partial void OnItem_IdChanging(int value);
    partial void OnItem_IdChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Stock()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Stock_ID
		{
			get
			{
				return this._Stock_ID;
			}
			set
			{
				if ((this._Stock_ID != value))
				{
					this.OnStock_IDChanging(value);
					this.SendPropertyChanging();
					this._Stock_ID = value;
					this.SendPropertyChanged("Stock_ID");
					this.OnStock_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock_Quantity", DbType="Int NOT NULL")]
		public int Stock_Quantity
		{
			get
			{
				return this._Stock_Quantity;
			}
			set
			{
				if ((this._Stock_Quantity != value))
				{
					this.OnStock_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Stock_Quantity = value;
					this.SendPropertyChanged("Stock_Quantity");
					this.OnStock_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifyDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastModifyDate
		{
			get
			{
				return this._LastModifyDate;
			}
			set
			{
				if ((this._LastModifyDate != value))
				{
					this.OnLastModifyDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifyDate = value;
					this.SendPropertyChanged("LastModifyDate");
					this.OnLastModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_UserId", DbType="Int NOT NULL")]
		public int Last_UserId
		{
			get
			{
				return this._Last_UserId;
			}
			set
			{
				if ((this._Last_UserId != value))
				{
					this.OnLast_UserIdChanging(value);
					this.SendPropertyChanging();
					this._Last_UserId = value;
					this.SendPropertyChanged("Last_UserId");
					this.OnLast_UserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Id", DbType="Int NOT NULL")]
		public int Item_Id
		{
			get
			{
				return this._Item_Id;
			}
			set
			{
				if ((this._Item_Id != value))
				{
					this.OnItem_IdChanging(value);
					this.SendPropertyChanging();
					this._Item_Id = value;
					this.SendPropertyChanged("Item_Id");
					this.OnItem_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tax")]
	public partial class Tax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Tax_Id;
		
		private string _Tax_Name;
		
		private double _Tax_Percentage;
		
		private byte _IsDisable;
		
		private int _UserId;
		
		private System.DateTime _Tax_RecTime;
		
		private string _Tax_Notes;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTax_IdChanging(int value);
    partial void OnTax_IdChanged();
    partial void OnTax_NameChanging(string value);
    partial void OnTax_NameChanged();
    partial void OnTax_PercentageChanging(double value);
    partial void OnTax_PercentageChanged();
    partial void OnIsDisableChanging(byte value);
    partial void OnIsDisableChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnTax_RecTimeChanging(System.DateTime value);
    partial void OnTax_RecTimeChanged();
    partial void OnTax_NotesChanging(string value);
    partial void OnTax_NotesChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisable2Changing(System.Nullable<bool> value);
    partial void OnIsDisable2Changed();
    #endregion
		
		public Tax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Tax_Id
		{
			get
			{
				return this._Tax_Id;
			}
			set
			{
				if ((this._Tax_Id != value))
				{
					this.OnTax_IdChanging(value);
					this.SendPropertyChanging();
					this._Tax_Id = value;
					this.SendPropertyChanged("Tax_Id");
					this.OnTax_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Tax_Name
		{
			get
			{
				return this._Tax_Name;
			}
			set
			{
				if ((this._Tax_Name != value))
				{
					this.OnTax_NameChanging(value);
					this.SendPropertyChanging();
					this._Tax_Name = value;
					this.SendPropertyChanged("Tax_Name");
					this.OnTax_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax_Percentage", DbType="Float NOT NULL")]
		public double Tax_Percentage
		{
			get
			{
				return this._Tax_Percentage;
			}
			set
			{
				if ((this._Tax_Percentage != value))
				{
					this.OnTax_PercentageChanging(value);
					this.SendPropertyChanging();
					this._Tax_Percentage = value;
					this.SendPropertyChanged("Tax_Percentage");
					this.OnTax_PercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="TinyInt NOT NULL")]
		public byte IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime Tax_RecTime
		{
			get
			{
				return this._Tax_RecTime;
			}
			set
			{
				if ((this._Tax_RecTime != value))
				{
					this.OnTax_RecTimeChanging(value);
					this.SendPropertyChanging();
					this._Tax_RecTime = value;
					this.SendPropertyChanged("Tax_RecTime");
					this.OnTax_RecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax_Notes", DbType="NVarChar(MAX)")]
		public string Tax_Notes
		{
			get
			{
				return this._Tax_Notes;
			}
			set
			{
				if ((this._Tax_Notes != value))
				{
					this.OnTax_NotesChanging(value);
					this.SendPropertyChanging();
					this._Tax_Notes = value;
					this.SendPropertyChanged("Tax_Notes");
					this.OnTax_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable2", DbType="Bit")]
		public System.Nullable<bool> IsDisable2
		{
			get
			{
				return this._IsDisable2;
			}
			set
			{
				if ((this._IsDisable2 != value))
				{
					this.OnIsDisable2Changing(value);
					this.SendPropertyChanging();
					this._IsDisable2 = value;
					this.SendPropertyChanged("IsDisable2");
					this.OnIsDisable2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Total_Transation")]
	public partial class Total_Transation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Total_Transation_Id;
		
		private int _Total_Transation_Month;
		
		private int _Total_Transation_Year;
		
		private double _TotalInvoiceGain;
		
		private double _TotalInvoicePay;
		
		private double _TotalCollectingPay;
		
		private double _TotalCollectingGain;
		
		private double _TotalExpenses;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTotal_Transation_IdChanging(int value);
    partial void OnTotal_Transation_IdChanged();
    partial void OnTotal_Transation_MonthChanging(int value);
    partial void OnTotal_Transation_MonthChanged();
    partial void OnTotal_Transation_YearChanging(int value);
    partial void OnTotal_Transation_YearChanged();
    partial void OnTotalInvoiceGainChanging(double value);
    partial void OnTotalInvoiceGainChanged();
    partial void OnTotalInvoicePayChanging(double value);
    partial void OnTotalInvoicePayChanged();
    partial void OnTotalCollectingPayChanging(double value);
    partial void OnTotalCollectingPayChanged();
    partial void OnTotalCollectingGainChanging(double value);
    partial void OnTotalCollectingGainChanged();
    partial void OnTotalExpensesChanging(double value);
    partial void OnTotalExpensesChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Total_Transation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Transation_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Total_Transation_Id
		{
			get
			{
				return this._Total_Transation_Id;
			}
			set
			{
				if ((this._Total_Transation_Id != value))
				{
					this.OnTotal_Transation_IdChanging(value);
					this.SendPropertyChanging();
					this._Total_Transation_Id = value;
					this.SendPropertyChanged("Total_Transation_Id");
					this.OnTotal_Transation_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Transation_Month", DbType="Int NOT NULL")]
		public int Total_Transation_Month
		{
			get
			{
				return this._Total_Transation_Month;
			}
			set
			{
				if ((this._Total_Transation_Month != value))
				{
					this.OnTotal_Transation_MonthChanging(value);
					this.SendPropertyChanging();
					this._Total_Transation_Month = value;
					this.SendPropertyChanged("Total_Transation_Month");
					this.OnTotal_Transation_MonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total_Transation_Year", DbType="Int NOT NULL")]
		public int Total_Transation_Year
		{
			get
			{
				return this._Total_Transation_Year;
			}
			set
			{
				if ((this._Total_Transation_Year != value))
				{
					this.OnTotal_Transation_YearChanging(value);
					this.SendPropertyChanging();
					this._Total_Transation_Year = value;
					this.SendPropertyChanged("Total_Transation_Year");
					this.OnTotal_Transation_YearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInvoiceGain", DbType="Float NOT NULL")]
		public double TotalInvoiceGain
		{
			get
			{
				return this._TotalInvoiceGain;
			}
			set
			{
				if ((this._TotalInvoiceGain != value))
				{
					this.OnTotalInvoiceGainChanging(value);
					this.SendPropertyChanging();
					this._TotalInvoiceGain = value;
					this.SendPropertyChanged("TotalInvoiceGain");
					this.OnTotalInvoiceGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInvoicePay", DbType="Float NOT NULL")]
		public double TotalInvoicePay
		{
			get
			{
				return this._TotalInvoicePay;
			}
			set
			{
				if ((this._TotalInvoicePay != value))
				{
					this.OnTotalInvoicePayChanging(value);
					this.SendPropertyChanging();
					this._TotalInvoicePay = value;
					this.SendPropertyChanged("TotalInvoicePay");
					this.OnTotalInvoicePayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCollectingPay", DbType="Float NOT NULL")]
		public double TotalCollectingPay
		{
			get
			{
				return this._TotalCollectingPay;
			}
			set
			{
				if ((this._TotalCollectingPay != value))
				{
					this.OnTotalCollectingPayChanging(value);
					this.SendPropertyChanging();
					this._TotalCollectingPay = value;
					this.SendPropertyChanged("TotalCollectingPay");
					this.OnTotalCollectingPayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCollectingGain", DbType="Float NOT NULL")]
		public double TotalCollectingGain
		{
			get
			{
				return this._TotalCollectingGain;
			}
			set
			{
				if ((this._TotalCollectingGain != value))
				{
					this.OnTotalCollectingGainChanging(value);
					this.SendPropertyChanging();
					this._TotalCollectingGain = value;
					this.SendPropertyChanged("TotalCollectingGain");
					this.OnTotalCollectingGainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalExpenses", DbType="Float NOT NULL")]
		public double TotalExpenses
		{
			get
			{
				return this._TotalExpenses;
			}
			set
			{
				if ((this._TotalExpenses != value))
				{
					this.OnTotalExpensesChanging(value);
					this.SendPropertyChanging();
					this._TotalExpenses = value;
					this.SendPropertyChanged("TotalExpenses");
					this.OnTotalExpensesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transaction_Details")]
	public partial class Transaction_Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Transaction_Details_Id;
		
		private string _Transaction_Details_Name;
		
		private int _Transaction_Type_Id;
		
		private System.DateTime _Transaction_Details_Date;
		
		private double _Transaction_Details_Cost;
		
		private double _Transaction_Details_Price;
		
		private int _Original_ID;
		
		private double _Transaction_Details_Profit;
		
		private string _Transaction_Details_Notes;
		
		private int _Transaction_Details_UserId;
		
		private System.DateTime _Transaction_Details_Rectime;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransaction_Details_IdChanging(int value);
    partial void OnTransaction_Details_IdChanged();
    partial void OnTransaction_Details_NameChanging(string value);
    partial void OnTransaction_Details_NameChanged();
    partial void OnTransaction_Type_IdChanging(int value);
    partial void OnTransaction_Type_IdChanged();
    partial void OnTransaction_Details_DateChanging(System.DateTime value);
    partial void OnTransaction_Details_DateChanged();
    partial void OnTransaction_Details_CostChanging(double value);
    partial void OnTransaction_Details_CostChanged();
    partial void OnTransaction_Details_PriceChanging(double value);
    partial void OnTransaction_Details_PriceChanged();
    partial void OnOriginal_IDChanging(int value);
    partial void OnOriginal_IDChanged();
    partial void OnTransaction_Details_ProfitChanging(double value);
    partial void OnTransaction_Details_ProfitChanged();
    partial void OnTransaction_Details_NotesChanging(string value);
    partial void OnTransaction_Details_NotesChanged();
    partial void OnTransaction_Details_UserIdChanging(int value);
    partial void OnTransaction_Details_UserIdChanged();
    partial void OnTransaction_Details_RectimeChanging(System.DateTime value);
    partial void OnTransaction_Details_RectimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Transaction_Detail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Details_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Transaction_Details_Id
		{
			get
			{
				return this._Transaction_Details_Id;
			}
			set
			{
				if ((this._Transaction_Details_Id != value))
				{
					this.OnTransaction_Details_IdChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Details_Id = value;
					this.SendPropertyChanged("Transaction_Details_Id");
					this.OnTransaction_Details_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Details_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Transaction_Details_Name
		{
			get
			{
				return this._Transaction_Details_Name;
			}
			set
			{
				if ((this._Transaction_Details_Name != value))
				{
					this.OnTransaction_Details_NameChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Details_Name = value;
					this.SendPropertyChanged("Transaction_Details_Name");
					this.OnTransaction_Details_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Type_Id", DbType="Int NOT NULL")]
		public int Transaction_Type_Id
		{
			get
			{
				return this._Transaction_Type_Id;
			}
			set
			{
				if ((this._Transaction_Type_Id != value))
				{
					this.OnTransaction_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Type_Id = value;
					this.SendPropertyChanged("Transaction_Type_Id");
					this.OnTransaction_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Details_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Transaction_Details_Date
		{
			get
			{
				return this._Transaction_Details_Date;
			}
			set
			{
				if ((this._Transaction_Details_Date != value))
				{
					this.OnTransaction_Details_DateChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Details_Date = value;
					this.SendPropertyChanged("Transaction_Details_Date");
					this.OnTransaction_Details_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Details_Cost", DbType="Float NOT NULL")]
		public double Transaction_Details_Cost
		{
			get
			{
				return this._Transaction_Details_Cost;
			}
			set
			{
				if ((this._Transaction_Details_Cost != value))
				{
					this.OnTransaction_Details_CostChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Details_Cost = value;
					this.SendPropertyChanged("Transaction_Details_Cost");
					this.OnTransaction_Details_CostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Details_Price", DbType="Float NOT NULL")]
		public double Transaction_Details_Price
		{
			get
			{
				return this._Transaction_Details_Price;
			}
			set
			{
				if ((this._Transaction_Details_Price != value))
				{
					this.OnTransaction_Details_PriceChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Details_Price = value;
					this.SendPropertyChanged("Transaction_Details_Price");
					this.OnTransaction_Details_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Original_ID", DbType="Int NOT NULL")]
		public int Original_ID
		{
			get
			{
				return this._Original_ID;
			}
			set
			{
				if ((this._Original_ID != value))
				{
					this.OnOriginal_IDChanging(value);
					this.SendPropertyChanging();
					this._Original_ID = value;
					this.SendPropertyChanged("Original_ID");
					this.OnOriginal_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Details_Profit", DbType="Float NOT NULL")]
		public double Transaction_Details_Profit
		{
			get
			{
				return this._Transaction_Details_Profit;
			}
			set
			{
				if ((this._Transaction_Details_Profit != value))
				{
					this.OnTransaction_Details_ProfitChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Details_Profit = value;
					this.SendPropertyChanged("Transaction_Details_Profit");
					this.OnTransaction_Details_ProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Details_Notes", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Transaction_Details_Notes
		{
			get
			{
				return this._Transaction_Details_Notes;
			}
			set
			{
				if ((this._Transaction_Details_Notes != value))
				{
					this.OnTransaction_Details_NotesChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Details_Notes = value;
					this.SendPropertyChanged("Transaction_Details_Notes");
					this.OnTransaction_Details_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Details_UserId", DbType="Int NOT NULL")]
		public int Transaction_Details_UserId
		{
			get
			{
				return this._Transaction_Details_UserId;
			}
			set
			{
				if ((this._Transaction_Details_UserId != value))
				{
					this.OnTransaction_Details_UserIdChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Details_UserId = value;
					this.SendPropertyChanged("Transaction_Details_UserId");
					this.OnTransaction_Details_UserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Details_Rectime", DbType="DateTime NOT NULL")]
		public System.DateTime Transaction_Details_Rectime
		{
			get
			{
				return this._Transaction_Details_Rectime;
			}
			set
			{
				if ((this._Transaction_Details_Rectime != value))
				{
					this.OnTransaction_Details_RectimeChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Details_Rectime = value;
					this.SendPropertyChanged("Transaction_Details_Rectime");
					this.OnTransaction_Details_RectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transaction_Type")]
	public partial class Transaction_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Transaction_Type_Id;
		
		private string _Transaction_Type_Name;
		
		private int _Transaction_Type_UserId;
		
		private System.DateTime _Transaction_Type_RecTime;
		
		private string _Transaction_Type_Notes;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransaction_Type_IdChanging(int value);
    partial void OnTransaction_Type_IdChanged();
    partial void OnTransaction_Type_NameChanging(string value);
    partial void OnTransaction_Type_NameChanged();
    partial void OnTransaction_Type_UserIdChanging(int value);
    partial void OnTransaction_Type_UserIdChanged();
    partial void OnTransaction_Type_RecTimeChanging(System.DateTime value);
    partial void OnTransaction_Type_RecTimeChanged();
    partial void OnTransaction_Type_NotesChanging(string value);
    partial void OnTransaction_Type_NotesChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Transaction_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Type_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Transaction_Type_Id
		{
			get
			{
				return this._Transaction_Type_Id;
			}
			set
			{
				if ((this._Transaction_Type_Id != value))
				{
					this.OnTransaction_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Type_Id = value;
					this.SendPropertyChanged("Transaction_Type_Id");
					this.OnTransaction_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Type_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Transaction_Type_Name
		{
			get
			{
				return this._Transaction_Type_Name;
			}
			set
			{
				if ((this._Transaction_Type_Name != value))
				{
					this.OnTransaction_Type_NameChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Type_Name = value;
					this.SendPropertyChanged("Transaction_Type_Name");
					this.OnTransaction_Type_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Type_UserId", DbType="Int NOT NULL")]
		public int Transaction_Type_UserId
		{
			get
			{
				return this._Transaction_Type_UserId;
			}
			set
			{
				if ((this._Transaction_Type_UserId != value))
				{
					this.OnTransaction_Type_UserIdChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Type_UserId = value;
					this.SendPropertyChanged("Transaction_Type_UserId");
					this.OnTransaction_Type_UserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Type_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime Transaction_Type_RecTime
		{
			get
			{
				return this._Transaction_Type_RecTime;
			}
			set
			{
				if ((this._Transaction_Type_RecTime != value))
				{
					this.OnTransaction_Type_RecTimeChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Type_RecTime = value;
					this.SendPropertyChanged("Transaction_Type_RecTime");
					this.OnTransaction_Type_RecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Type_Notes", DbType="NVarChar(MAX)")]
		public string Transaction_Type_Notes
		{
			get
			{
				return this._Transaction_Type_Notes;
			}
			set
			{
				if ((this._Transaction_Type_Notes != value))
				{
					this.OnTransaction_Type_NotesChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Type_Notes = value;
					this.SendPropertyChanged("Transaction_Type_Notes");
					this.OnTransaction_Type_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cash")]
	public partial class Cash : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cash_Id;
		
		private System.Nullable<int> _Collecting_Id;
		
		private float _Cash_Amount;
		
		private System.DateTime _Cash_Date;
		
		private string _PersonInCharge;
		
		private int _Operation_Type;
		
		private string _Cash_Notes;
		
		private System.DateTime _Cash_RecTime;
		
		private int _UserId;
		
		private System.Nullable<int> _Expenses_Id;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
		private System.Nullable<int> _CashID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCash_IdChanging(int value);
    partial void OnCash_IdChanged();
    partial void OnCollecting_IdChanging(System.Nullable<int> value);
    partial void OnCollecting_IdChanged();
    partial void OnCash_AmountChanging(float value);
    partial void OnCash_AmountChanged();
    partial void OnCash_DateChanging(System.DateTime value);
    partial void OnCash_DateChanged();
    partial void OnPersonInChargeChanging(string value);
    partial void OnPersonInChargeChanged();
    partial void OnOperation_TypeChanging(int value);
    partial void OnOperation_TypeChanged();
    partial void OnCash_NotesChanging(string value);
    partial void OnCash_NotesChanged();
    partial void OnCash_RecTimeChanging(System.DateTime value);
    partial void OnCash_RecTimeChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnExpenses_IdChanging(System.Nullable<int> value);
    partial void OnExpenses_IdChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    partial void OnCashIDChanging(System.Nullable<int> value);
    partial void OnCashIDChanged();
    #endregion
		
		public Cash()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cash_Id
		{
			get
			{
				return this._Cash_Id;
			}
			set
			{
				if ((this._Cash_Id != value))
				{
					this.OnCash_IdChanging(value);
					this.SendPropertyChanging();
					this._Cash_Id = value;
					this.SendPropertyChanged("Cash_Id");
					this.OnCash_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_Id", DbType="Int NOT NULL")]
		public System.Nullable<int> Collecting_Id
		{
			get
			{
				return this._Collecting_Id;
			}
			set
			{
				if ((this._Collecting_Id != value))
				{
					this.OnCollecting_IdChanging(value);
					this.SendPropertyChanging();
					this._Collecting_Id = value;
					this.SendPropertyChanged("Collecting_Id");
					this.OnCollecting_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Amount", DbType="Decimal(18,2) NOT NULL")]
		public float Cash_Amount
		{
			get
			{
				return this._Cash_Amount;
			}
			set
			{
				if ((this._Cash_Amount != value))
				{
					this.OnCash_AmountChanging(value);
					this.SendPropertyChanging();
					this._Cash_Amount = value;
					this.SendPropertyChanged("Cash_Amount");
					this.OnCash_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Cash_Date
		{
			get
			{
				return this._Cash_Date;
			}
			set
			{
				if ((this._Cash_Date != value))
				{
					this.OnCash_DateChanging(value);
					this.SendPropertyChanging();
					this._Cash_Date = value;
					this.SendPropertyChanged("Cash_Date");
					this.OnCash_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInCharge", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PersonInCharge
		{
			get
			{
				return this._PersonInCharge;
			}
			set
			{
				if ((this._PersonInCharge != value))
				{
					this.OnPersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._PersonInCharge = value;
					this.SendPropertyChanged("PersonInCharge");
					this.OnPersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation_Type", DbType="TinyInt NOT NULL")]
		public int Operation_Type
		{
			get
			{
				return this._Operation_Type;
			}
			set
			{
				if ((this._Operation_Type != value))
				{
					this.OnOperation_TypeChanging(value);
					this.SendPropertyChanging();
					this._Operation_Type = value;
					this.SendPropertyChanged("Operation_Type");
					this.OnOperation_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_Notes", DbType="NVarChar(MAX)")]
		public string Cash_Notes
		{
			get
			{
				return this._Cash_Notes;
			}
			set
			{
				if ((this._Cash_Notes != value))
				{
					this.OnCash_NotesChanging(value);
					this.SendPropertyChanging();
					this._Cash_Notes = value;
					this.SendPropertyChanged("Cash_Notes");
					this.OnCash_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cash_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime Cash_RecTime
		{
			get
			{
				return this._Cash_RecTime;
			}
			set
			{
				if ((this._Cash_RecTime != value))
				{
					this.OnCash_RecTimeChanging(value);
					this.SendPropertyChanging();
					this._Cash_RecTime = value;
					this.SendPropertyChanged("Cash_RecTime");
					this.OnCash_RecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Id", DbType="Int NOT NULL")]
		public System.Nullable<int> Expenses_Id
		{
			get
			{
				return this._Expenses_Id;
			}
			set
			{
				if ((this._Expenses_Id != value))
				{
					this.OnExpenses_IdChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Id = value;
					this.SendPropertyChanged("Expenses_Id");
					this.OnExpenses_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashID", DbType="Int")]
		public System.Nullable<int> CashID
		{
			get
			{
				return this._CashID;
			}
			set
			{
				if ((this._CashID != value))
				{
					this.OnCashIDChanging(value);
					this.SendPropertyChanging();
					this._CashID = value;
					this.SendPropertyChanged("CashID");
					this.OnCashIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bank")]
	public partial class Bank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bank_Id;
		
		private int _BankName_ID;
		
		private int _Collecting_Id;
		
		private decimal _Amount;
		
		private System.DateTime _DateTime;
		
		private string _PersonInCharge;
		
		private byte _Operation_Type;
		
		private string _Bank_Notes;
		
		private System.DateTime _RecTime;
		
		private int _UserId;
		
		private int _Expenses_Id;
		
		private System.Nullable<bool> _IsDisable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBank_IdChanging(int value);
    partial void OnBank_IdChanged();
    partial void OnBankName_IDChanging(int value);
    partial void OnBankName_IDChanged();
    partial void OnCollecting_IdChanging(int value);
    partial void OnCollecting_IdChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnPersonInChargeChanging(string value);
    partial void OnPersonInChargeChanged();
    partial void OnOperation_TypeChanging(byte value);
    partial void OnOperation_TypeChanged();
    partial void OnBank_NotesChanging(string value);
    partial void OnBank_NotesChanged();
    partial void OnRecTimeChanging(System.DateTime value);
    partial void OnRecTimeChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnExpenses_IdChanging(int value);
    partial void OnExpenses_IdChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    #endregion
		
		public Bank()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Bank_Id
		{
			get
			{
				return this._Bank_Id;
			}
			set
			{
				if ((this._Bank_Id != value))
				{
					this.OnBank_IdChanging(value);
					this.SendPropertyChanging();
					this._Bank_Id = value;
					this.SendPropertyChanged("Bank_Id");
					this.OnBank_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName_ID", DbType="Int NOT NULL")]
		public int BankName_ID
		{
			get
			{
				return this._BankName_ID;
			}
			set
			{
				if ((this._BankName_ID != value))
				{
					this.OnBankName_IDChanging(value);
					this.SendPropertyChanging();
					this._BankName_ID = value;
					this.SendPropertyChanged("BankName_ID");
					this.OnBankName_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_Id", DbType="Int NOT NULL")]
		public int Collecting_Id
		{
			get
			{
				return this._Collecting_Id;
			}
			set
			{
				if ((this._Collecting_Id != value))
				{
					this.OnCollecting_IdChanging(value);
					this.SendPropertyChanging();
					this._Collecting_Id = value;
					this.SendPropertyChanged("Collecting_Id");
					this.OnCollecting_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInCharge", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PersonInCharge
		{
			get
			{
				return this._PersonInCharge;
			}
			set
			{
				if ((this._PersonInCharge != value))
				{
					this.OnPersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._PersonInCharge = value;
					this.SendPropertyChanged("PersonInCharge");
					this.OnPersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation_Type", DbType="TinyInt NOT NULL")]
		public byte Operation_Type
		{
			get
			{
				return this._Operation_Type;
			}
			set
			{
				if ((this._Operation_Type != value))
				{
					this.OnOperation_TypeChanging(value);
					this.SendPropertyChanging();
					this._Operation_Type = value;
					this.SendPropertyChanged("Operation_Type");
					this.OnOperation_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank_Notes", DbType="NVarChar(MAX)")]
		public string Bank_Notes
		{
			get
			{
				return this._Bank_Notes;
			}
			set
			{
				if ((this._Bank_Notes != value))
				{
					this.OnBank_NotesChanging(value);
					this.SendPropertyChanging();
					this._Bank_Notes = value;
					this.SendPropertyChanged("Bank_Notes");
					this.OnBank_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecTime
		{
			get
			{
				return this._RecTime;
			}
			set
			{
				if ((this._RecTime != value))
				{
					this.OnRecTimeChanging(value);
					this.SendPropertyChanging();
					this._RecTime = value;
					this.SendPropertyChanged("RecTime");
					this.OnRecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Id", DbType="Int NOT NULL")]
		public int Expenses_Id
		{
			get
			{
				return this._Expenses_Id;
			}
			set
			{
				if ((this._Expenses_Id != value))
				{
					this.OnExpenses_IdChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Id = value;
					this.SendPropertyChanged("Expenses_Id");
					this.OnExpenses_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cheque")]
	public partial class Cheque : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cheque_Id;
		
		private string _Cheque_No;
		
		private System.DateTime _Cheque_Date;
		
		private string _PersonInCharge;
		
		private int _UserId;
		
		private System.DateTime _RecTime;
		
		private byte _Done;
		
		private string _Cheque_Bank_Name;
		
		private string _Cheque_Notes;
		
		private System.Nullable<bool> _IsDisable;
		
		private System.Nullable<int> _Collecting_Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheque_IdChanging(int value);
    partial void OnCheque_IdChanged();
    partial void OnCheque_NoChanging(string value);
    partial void OnCheque_NoChanged();
    partial void OnCheque_DateChanging(System.DateTime value);
    partial void OnCheque_DateChanged();
    partial void OnPersonInChargeChanging(string value);
    partial void OnPersonInChargeChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRecTimeChanging(System.DateTime value);
    partial void OnRecTimeChanged();
    partial void OnDoneChanging(byte value);
    partial void OnDoneChanged();
    partial void OnCheque_Bank_NameChanging(string value);
    partial void OnCheque_Bank_NameChanged();
    partial void OnCheque_NotesChanging(string value);
    partial void OnCheque_NotesChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    partial void OnCollecting_IdChanging(System.Nullable<int> value);
    partial void OnCollecting_IdChanged();
    #endregion
		
		public Cheque()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cheque_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cheque_Id
		{
			get
			{
				return this._Cheque_Id;
			}
			set
			{
				if ((this._Cheque_Id != value))
				{
					this.OnCheque_IdChanging(value);
					this.SendPropertyChanging();
					this._Cheque_Id = value;
					this.SendPropertyChanged("Cheque_Id");
					this.OnCheque_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cheque_No", DbType="NVarChar(150)")]
		public string Cheque_No
		{
			get
			{
				return this._Cheque_No;
			}
			set
			{
				if ((this._Cheque_No != value))
				{
					this.OnCheque_NoChanging(value);
					this.SendPropertyChanging();
					this._Cheque_No = value;
					this.SendPropertyChanged("Cheque_No");
					this.OnCheque_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cheque_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Cheque_Date
		{
			get
			{
				return this._Cheque_Date;
			}
			set
			{
				if ((this._Cheque_Date != value))
				{
					this.OnCheque_DateChanging(value);
					this.SendPropertyChanging();
					this._Cheque_Date = value;
					this.SendPropertyChanged("Cheque_Date");
					this.OnCheque_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonInCharge", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string PersonInCharge
		{
			get
			{
				return this._PersonInCharge;
			}
			set
			{
				if ((this._PersonInCharge != value))
				{
					this.OnPersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._PersonInCharge = value;
					this.SendPropertyChanged("PersonInCharge");
					this.OnPersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecTime", DbType="DateTime NOT NULL")]
		public System.DateTime RecTime
		{
			get
			{
				return this._RecTime;
			}
			set
			{
				if ((this._RecTime != value))
				{
					this.OnRecTimeChanging(value);
					this.SendPropertyChanging();
					this._RecTime = value;
					this.SendPropertyChanged("RecTime");
					this.OnRecTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Done", DbType="TinyInt NOT NULL")]
		public byte Done
		{
			get
			{
				return this._Done;
			}
			set
			{
				if ((this._Done != value))
				{
					this.OnDoneChanging(value);
					this.SendPropertyChanging();
					this._Done = value;
					this.SendPropertyChanged("Done");
					this.OnDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cheque_Bank_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Cheque_Bank_Name
		{
			get
			{
				return this._Cheque_Bank_Name;
			}
			set
			{
				if ((this._Cheque_Bank_Name != value))
				{
					this.OnCheque_Bank_NameChanging(value);
					this.SendPropertyChanging();
					this._Cheque_Bank_Name = value;
					this.SendPropertyChanged("Cheque_Bank_Name");
					this.OnCheque_Bank_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cheque_Notes", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Cheque_Notes
		{
			get
			{
				return this._Cheque_Notes;
			}
			set
			{
				if ((this._Cheque_Notes != value))
				{
					this.OnCheque_NotesChanging(value);
					this.SendPropertyChanging();
					this._Cheque_Notes = value;
					this.SendPropertyChanged("Cheque_Notes");
					this.OnCheque_NotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_Id", DbType="Int")]
		public System.Nullable<int> Collecting_Id
		{
			get
			{
				return this._Collecting_Id;
			}
			set
			{
				if ((this._Collecting_Id != value))
				{
					this.OnCollecting_IdChanging(value);
					this.SendPropertyChanging();
					this._Collecting_Id = value;
					this.SendPropertyChanged("Collecting_Id");
					this.OnCollecting_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collecting")]
	public partial class Collecting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Collecting_Id;
		
		private string _Collecting_Name;
		
		private int _Collecting_No;
		
		private System.DateTime _Collecting_Date;
		
		private int _Invoice_Id;
		
		private double _Collecting_Amount;
		
		private double _Collecting_WhatsLeft;
		
		private System.DateTime _Collecting_Rectime;
		
		private string _Collecting_Note;
		
		private int _Cheque_Id;
		
		private int _Contact_Id;
		
		private int _User_Id;
		
		private System.DateTime _Log_Date;
		
		private int _Operation_Type_Id;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
		private System.Nullable<int> _BankorCash;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollecting_IdChanging(int value);
    partial void OnCollecting_IdChanged();
    partial void OnCollecting_NameChanging(string value);
    partial void OnCollecting_NameChanged();
    partial void OnCollecting_NoChanging(int value);
    partial void OnCollecting_NoChanged();
    partial void OnCollecting_DateChanging(System.DateTime value);
    partial void OnCollecting_DateChanged();
    partial void OnInvoice_IdChanging(int value);
    partial void OnInvoice_IdChanged();
    partial void OnCollecting_AmountChanging(double value);
    partial void OnCollecting_AmountChanged();
    partial void OnCollecting_WhatsLeftChanging(double value);
    partial void OnCollecting_WhatsLeftChanged();
    partial void OnCollecting_RectimeChanging(System.DateTime value);
    partial void OnCollecting_RectimeChanged();
    partial void OnCollecting_NoteChanging(string value);
    partial void OnCollecting_NoteChanged();
    partial void OnCheque_IdChanging(int value);
    partial void OnCheque_IdChanged();
    partial void OnContact_IdChanging(int value);
    partial void OnContact_IdChanged();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    partial void OnLog_DateChanging(System.DateTime value);
    partial void OnLog_DateChanged();
    partial void OnOperation_Type_IdChanging(int value);
    partial void OnOperation_Type_IdChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    partial void OnBankorCashChanging(System.Nullable<int> value);
    partial void OnBankorCashChanged();
    #endregion
		
		public Collecting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Collecting_Id
		{
			get
			{
				return this._Collecting_Id;
			}
			set
			{
				if ((this._Collecting_Id != value))
				{
					this.OnCollecting_IdChanging(value);
					this.SendPropertyChanging();
					this._Collecting_Id = value;
					this.SendPropertyChanged("Collecting_Id");
					this.OnCollecting_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_Name", DbType="NVarChar(350) NOT NULL", CanBeNull=false)]
		public string Collecting_Name
		{
			get
			{
				return this._Collecting_Name;
			}
			set
			{
				if ((this._Collecting_Name != value))
				{
					this.OnCollecting_NameChanging(value);
					this.SendPropertyChanging();
					this._Collecting_Name = value;
					this.SendPropertyChanged("Collecting_Name");
					this.OnCollecting_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_No", DbType="Int NOT NULL")]
		public int Collecting_No
		{
			get
			{
				return this._Collecting_No;
			}
			set
			{
				if ((this._Collecting_No != value))
				{
					this.OnCollecting_NoChanging(value);
					this.SendPropertyChanging();
					this._Collecting_No = value;
					this.SendPropertyChanged("Collecting_No");
					this.OnCollecting_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Collecting_Date
		{
			get
			{
				return this._Collecting_Date;
			}
			set
			{
				if ((this._Collecting_Date != value))
				{
					this.OnCollecting_DateChanging(value);
					this.SendPropertyChanging();
					this._Collecting_Date = value;
					this.SendPropertyChanged("Collecting_Date");
					this.OnCollecting_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Id", DbType="Int NOT NULL")]
		public int Invoice_Id
		{
			get
			{
				return this._Invoice_Id;
			}
			set
			{
				if ((this._Invoice_Id != value))
				{
					this.OnInvoice_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Id = value;
					this.SendPropertyChanged("Invoice_Id");
					this.OnInvoice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_Amount", DbType="Float NOT NULL")]
		public double Collecting_Amount
		{
			get
			{
				return this._Collecting_Amount;
			}
			set
			{
				if ((this._Collecting_Amount != value))
				{
					this.OnCollecting_AmountChanging(value);
					this.SendPropertyChanging();
					this._Collecting_Amount = value;
					this.SendPropertyChanged("Collecting_Amount");
					this.OnCollecting_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_WhatsLeft", DbType="Float NOT NULL")]
		public double Collecting_WhatsLeft
		{
			get
			{
				return this._Collecting_WhatsLeft;
			}
			set
			{
				if ((this._Collecting_WhatsLeft != value))
				{
					this.OnCollecting_WhatsLeftChanging(value);
					this.SendPropertyChanging();
					this._Collecting_WhatsLeft = value;
					this.SendPropertyChanged("Collecting_WhatsLeft");
					this.OnCollecting_WhatsLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_Rectime", DbType="DateTime NOT NULL")]
		public System.DateTime Collecting_Rectime
		{
			get
			{
				return this._Collecting_Rectime;
			}
			set
			{
				if ((this._Collecting_Rectime != value))
				{
					this.OnCollecting_RectimeChanging(value);
					this.SendPropertyChanging();
					this._Collecting_Rectime = value;
					this.SendPropertyChanged("Collecting_Rectime");
					this.OnCollecting_RectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Collecting_Note", DbType="NVarChar(MAX)")]
		public string Collecting_Note
		{
			get
			{
				return this._Collecting_Note;
			}
			set
			{
				if ((this._Collecting_Note != value))
				{
					this.OnCollecting_NoteChanging(value);
					this.SendPropertyChanging();
					this._Collecting_Note = value;
					this.SendPropertyChanged("Collecting_Note");
					this.OnCollecting_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cheque_Id", DbType="Int NOT NULL")]
		public int Cheque_Id
		{
			get
			{
				return this._Cheque_Id;
			}
			set
			{
				if ((this._Cheque_Id != value))
				{
					this.OnCheque_IdChanging(value);
					this.SendPropertyChanging();
					this._Cheque_Id = value;
					this.SendPropertyChanged("Cheque_Id");
					this.OnCheque_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Id", DbType="Int NOT NULL")]
		public int Contact_Id
		{
			get
			{
				return this._Contact_Id;
			}
			set
			{
				if ((this._Contact_Id != value))
				{
					this.OnContact_IdChanging(value);
					this.SendPropertyChanging();
					this._Contact_Id = value;
					this.SendPropertyChanged("Contact_Id");
					this.OnContact_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL")]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Log_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Log_Date
		{
			get
			{
				return this._Log_Date;
			}
			set
			{
				if ((this._Log_Date != value))
				{
					this.OnLog_DateChanging(value);
					this.SendPropertyChanging();
					this._Log_Date = value;
					this.SendPropertyChanged("Log_Date");
					this.OnLog_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Operation_Type_Id", DbType="Int NOT NULL")]
		public int Operation_Type_Id
		{
			get
			{
				return this._Operation_Type_Id;
			}
			set
			{
				if ((this._Operation_Type_Id != value))
				{
					this.OnOperation_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Operation_Type_Id = value;
					this.SendPropertyChanged("Operation_Type_Id");
					this.OnOperation_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankorCash", DbType="Int")]
		public System.Nullable<int> BankorCash
		{
			get
			{
				return this._BankorCash;
			}
			set
			{
				if ((this._BankorCash != value))
				{
					this.OnBankorCashChanging(value);
					this.SendPropertyChanging();
					this._BankorCash = value;
					this.SendPropertyChanged("BankorCash");
					this.OnBankorCashChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Scripts")]
	public partial class Script : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Query;
		
		private System.Nullable<System.DateTime> _DateTime;
		
		private System.Nullable<int> _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQueryChanging(string value);
    partial void OnQueryChanged();
    partial void OnDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public Script()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Query", DbType="NVarChar(MAX)")]
		public string Query
		{
			get
			{
				return this._Query;
			}
			set
			{
				if ((this._Query != value))
				{
					this.OnQueryChanging(value);
					this.SendPropertyChanging();
					this._Query = value;
					this.SendPropertyChanged("Query");
					this.OnQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Invoice_Id;
		
		private int _Invoice_No;
		
		private System.DateTime _Invoice_Date;
		
		private int _Contact_Id;
		
		private int _Invoice_Type_Id;
		
		private System.DateTime _Invoice_Rectime;
		
		private string _Invoice_Note;
		
		private double _Invoice_TotalCost;
		
		private byte _Invoice_IsDone;
		
		private double _Invoice_Price;
		
		private double _Invoice_AfterDiscountprice;
		
		private double _Invoice_AfterDiscountprice_ATax;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
		private System.Nullable<decimal> _totalPrice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvoice_IdChanging(int value);
    partial void OnInvoice_IdChanged();
    partial void OnInvoice_NoChanging(int value);
    partial void OnInvoice_NoChanged();
    partial void OnInvoice_DateChanging(System.DateTime value);
    partial void OnInvoice_DateChanged();
    partial void OnContact_IdChanging(int value);
    partial void OnContact_IdChanged();
    partial void OnInvoice_Type_IdChanging(int value);
    partial void OnInvoice_Type_IdChanged();
    partial void OnInvoice_RectimeChanging(System.DateTime value);
    partial void OnInvoice_RectimeChanged();
    partial void OnInvoice_NoteChanging(string value);
    partial void OnInvoice_NoteChanged();
    partial void OnInvoice_TotalCostChanging(double value);
    partial void OnInvoice_TotalCostChanged();
    partial void OnInvoice_IsDoneChanging(byte value);
    partial void OnInvoice_IsDoneChanged();
    partial void OnInvoice_PriceChanging(double value);
    partial void OnInvoice_PriceChanged();
    partial void OnInvoice_AfterDiscountpriceChanging(double value);
    partial void OnInvoice_AfterDiscountpriceChanged();
    partial void OnInvoice_AfterDiscountprice_ATaxChanging(double value);
    partial void OnInvoice_AfterDiscountprice_ATaxChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    partial void OntotalPriceChanging(System.Nullable<decimal> value);
    partial void OntotalPriceChanged();
    #endregion
		
		public Invoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Invoice_Id
		{
			get
			{
				return this._Invoice_Id;
			}
			set
			{
				if ((this._Invoice_Id != value))
				{
					this.OnInvoice_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Id = value;
					this.SendPropertyChanged("Invoice_Id");
					this.OnInvoice_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_No", DbType="Int NOT NULL")]
		public int Invoice_No
		{
			get
			{
				return this._Invoice_No;
			}
			set
			{
				if ((this._Invoice_No != value))
				{
					this.OnInvoice_NoChanging(value);
					this.SendPropertyChanging();
					this._Invoice_No = value;
					this.SendPropertyChanged("Invoice_No");
					this.OnInvoice_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Invoice_Date
		{
			get
			{
				return this._Invoice_Date;
			}
			set
			{
				if ((this._Invoice_Date != value))
				{
					this.OnInvoice_DateChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Date = value;
					this.SendPropertyChanged("Invoice_Date");
					this.OnInvoice_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Id", DbType="Int NOT NULL")]
		public int Contact_Id
		{
			get
			{
				return this._Contact_Id;
			}
			set
			{
				if ((this._Contact_Id != value))
				{
					this.OnContact_IdChanging(value);
					this.SendPropertyChanging();
					this._Contact_Id = value;
					this.SendPropertyChanged("Contact_Id");
					this.OnContact_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Type_Id", DbType="Int NOT NULL")]
		public int Invoice_Type_Id
		{
			get
			{
				return this._Invoice_Type_Id;
			}
			set
			{
				if ((this._Invoice_Type_Id != value))
				{
					this.OnInvoice_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Type_Id = value;
					this.SendPropertyChanged("Invoice_Type_Id");
					this.OnInvoice_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Rectime", DbType="DateTime NOT NULL")]
		public System.DateTime Invoice_Rectime
		{
			get
			{
				return this._Invoice_Rectime;
			}
			set
			{
				if ((this._Invoice_Rectime != value))
				{
					this.OnInvoice_RectimeChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Rectime = value;
					this.SendPropertyChanged("Invoice_Rectime");
					this.OnInvoice_RectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Note", DbType="NVarChar(MAX)")]
		public string Invoice_Note
		{
			get
			{
				return this._Invoice_Note;
			}
			set
			{
				if ((this._Invoice_Note != value))
				{
					this.OnInvoice_NoteChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Note = value;
					this.SendPropertyChanged("Invoice_Note");
					this.OnInvoice_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_TotalCost", DbType="Float NOT NULL")]
		public double Invoice_TotalCost
		{
			get
			{
				return this._Invoice_TotalCost;
			}
			set
			{
				if ((this._Invoice_TotalCost != value))
				{
					this.OnInvoice_TotalCostChanging(value);
					this.SendPropertyChanging();
					this._Invoice_TotalCost = value;
					this.SendPropertyChanged("Invoice_TotalCost");
					this.OnInvoice_TotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_IsDone", DbType="TinyInt NOT NULL")]
		public byte Invoice_IsDone
		{
			get
			{
				return this._Invoice_IsDone;
			}
			set
			{
				if ((this._Invoice_IsDone != value))
				{
					this.OnInvoice_IsDoneChanging(value);
					this.SendPropertyChanging();
					this._Invoice_IsDone = value;
					this.SendPropertyChanged("Invoice_IsDone");
					this.OnInvoice_IsDoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_Price", DbType="Float NOT NULL")]
		public double Invoice_Price
		{
			get
			{
				return this._Invoice_Price;
			}
			set
			{
				if ((this._Invoice_Price != value))
				{
					this.OnInvoice_PriceChanging(value);
					this.SendPropertyChanging();
					this._Invoice_Price = value;
					this.SendPropertyChanged("Invoice_Price");
					this.OnInvoice_PriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_AfterDiscountprice", DbType="Float NOT NULL")]
		public double Invoice_AfterDiscountprice
		{
			get
			{
				return this._Invoice_AfterDiscountprice;
			}
			set
			{
				if ((this._Invoice_AfterDiscountprice != value))
				{
					this.OnInvoice_AfterDiscountpriceChanging(value);
					this.SendPropertyChanging();
					this._Invoice_AfterDiscountprice = value;
					this.SendPropertyChanged("Invoice_AfterDiscountprice");
					this.OnInvoice_AfterDiscountpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice_AfterDiscountprice_ATax", DbType="Float NOT NULL")]
		public double Invoice_AfterDiscountprice_ATax
		{
			get
			{
				return this._Invoice_AfterDiscountprice_ATax;
			}
			set
			{
				if ((this._Invoice_AfterDiscountprice_ATax != value))
				{
					this.OnInvoice_AfterDiscountprice_ATaxChanging(value);
					this.SendPropertyChanging();
					this._Invoice_AfterDiscountprice_ATax = value;
					this.SendPropertyChanged("Invoice_AfterDiscountprice_ATax");
					this.OnInvoice_AfterDiscountprice_ATaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> totalPrice
		{
			get
			{
				return this._totalPrice;
			}
			set
			{
				if ((this._totalPrice != value))
				{
					this.OntotalPriceChanging(value);
					this.SendPropertyChanging();
					this._totalPrice = value;
					this.SendPropertyChanged("totalPrice");
					this.OntotalPriceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expenses")]
	public partial class Expense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Expenses_Id;
		
		private int _Expenses_Type_Id;
		
		private int _Expenses_No;
		
		private System.DateTime _Expenses_Date;
		
		private double _Expenses_Cost;
		
		private double _Expenses_Quantity;
		
		private double _Expenses_Total;
		
		private System.DateTime _Expenses_From;
		
		private string _Expenses_PersonInCharge;
		
		private int _UserId;
		
		private System.DateTime _Expenses_Rectime;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpenses_IdChanging(int value);
    partial void OnExpenses_IdChanged();
    partial void OnExpenses_Type_IdChanging(int value);
    partial void OnExpenses_Type_IdChanged();
    partial void OnExpenses_NoChanging(int value);
    partial void OnExpenses_NoChanged();
    partial void OnExpenses_DateChanging(System.DateTime value);
    partial void OnExpenses_DateChanged();
    partial void OnExpenses_CostChanging(double value);
    partial void OnExpenses_CostChanged();
    partial void OnExpenses_QuantityChanging(double value);
    partial void OnExpenses_QuantityChanged();
    partial void OnExpenses_TotalChanging(double value);
    partial void OnExpenses_TotalChanged();
    partial void OnExpenses_FromChanging(System.DateTime value);
    partial void OnExpenses_FromChanged();
    partial void OnExpenses_PersonInChargeChanging(string value);
    partial void OnExpenses_PersonInChargeChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnExpenses_RectimeChanging(System.DateTime value);
    partial void OnExpenses_RectimeChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public Expense()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Expenses_Id
		{
			get
			{
				return this._Expenses_Id;
			}
			set
			{
				if ((this._Expenses_Id != value))
				{
					this.OnExpenses_IdChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Id = value;
					this.SendPropertyChanged("Expenses_Id");
					this.OnExpenses_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Type_Id", DbType="Int NOT NULL")]
		public int Expenses_Type_Id
		{
			get
			{
				return this._Expenses_Type_Id;
			}
			set
			{
				if ((this._Expenses_Type_Id != value))
				{
					this.OnExpenses_Type_IdChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Type_Id = value;
					this.SendPropertyChanged("Expenses_Type_Id");
					this.OnExpenses_Type_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_No", DbType="Int NOT NULL")]
		public int Expenses_No
		{
			get
			{
				return this._Expenses_No;
			}
			set
			{
				if ((this._Expenses_No != value))
				{
					this.OnExpenses_NoChanging(value);
					this.SendPropertyChanging();
					this._Expenses_No = value;
					this.SendPropertyChanged("Expenses_No");
					this.OnExpenses_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Expenses_Date
		{
			get
			{
				return this._Expenses_Date;
			}
			set
			{
				if ((this._Expenses_Date != value))
				{
					this.OnExpenses_DateChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Date = value;
					this.SendPropertyChanged("Expenses_Date");
					this.OnExpenses_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Cost", DbType="Float NOT NULL")]
		public double Expenses_Cost
		{
			get
			{
				return this._Expenses_Cost;
			}
			set
			{
				if ((this._Expenses_Cost != value))
				{
					this.OnExpenses_CostChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Cost = value;
					this.SendPropertyChanged("Expenses_Cost");
					this.OnExpenses_CostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Quantity", DbType="Float NOT NULL")]
		public double Expenses_Quantity
		{
			get
			{
				return this._Expenses_Quantity;
			}
			set
			{
				if ((this._Expenses_Quantity != value))
				{
					this.OnExpenses_QuantityChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Quantity = value;
					this.SendPropertyChanged("Expenses_Quantity");
					this.OnExpenses_QuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Total", DbType="Float NOT NULL")]
		public double Expenses_Total
		{
			get
			{
				return this._Expenses_Total;
			}
			set
			{
				if ((this._Expenses_Total != value))
				{
					this.OnExpenses_TotalChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Total = value;
					this.SendPropertyChanged("Expenses_Total");
					this.OnExpenses_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_From", DbType="DateTime NOT NULL")]
		public System.DateTime Expenses_From
		{
			get
			{
				return this._Expenses_From;
			}
			set
			{
				if ((this._Expenses_From != value))
				{
					this.OnExpenses_FromChanging(value);
					this.SendPropertyChanging();
					this._Expenses_From = value;
					this.SendPropertyChanged("Expenses_From");
					this.OnExpenses_FromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_PersonInCharge", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Expenses_PersonInCharge
		{
			get
			{
				return this._Expenses_PersonInCharge;
			}
			set
			{
				if ((this._Expenses_PersonInCharge != value))
				{
					this.OnExpenses_PersonInChargeChanging(value);
					this.SendPropertyChanging();
					this._Expenses_PersonInCharge = value;
					this.SendPropertyChanged("Expenses_PersonInCharge");
					this.OnExpenses_PersonInChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expenses_Rectime", DbType="DateTime NOT NULL")]
		public System.DateTime Expenses_Rectime
		{
			get
			{
				return this._Expenses_Rectime;
			}
			set
			{
				if ((this._Expenses_Rectime != value))
				{
					this.OnExpenses_RectimeChanging(value);
					this.SendPropertyChanging();
					this._Expenses_Rectime = value;
					this.SendPropertyChanged("Expenses_Rectime");
					this.OnExpenses_RectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(900)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contact")]
	public partial class Contact2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Contact_Id;
		
		private string _Contact_Name;
		
		private string _Contact_Mobile;
		
		private string _Contact_Location;
		
		private string _Contact_Phone;
		
		private string _Contact_Website;
		
		private string _Contact_Note;
		
		private int _Client_Type;
		
		private System.DateTime _Contact_Rectime;
		
		private string _Contact_ManinCharge;
		
		private string _Contact_Mobile_ManinChaarge;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<bool> _IsDisable;
		
		private string _AccountID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContact_IdChanging(int value);
    partial void OnContact_IdChanged();
    partial void OnContact_NameChanging(string value);
    partial void OnContact_NameChanged();
    partial void OnContact_MobileChanging(string value);
    partial void OnContact_MobileChanged();
    partial void OnContact_LocationChanging(string value);
    partial void OnContact_LocationChanged();
    partial void OnContact_PhoneChanging(string value);
    partial void OnContact_PhoneChanged();
    partial void OnContact_WebsiteChanging(string value);
    partial void OnContact_WebsiteChanged();
    partial void OnContact_NoteChanging(string value);
    partial void OnContact_NoteChanged();
    partial void OnClient_TypeChanging(int value);
    partial void OnClient_TypeChanged();
    partial void OnContact_RectimeChanging(System.DateTime value);
    partial void OnContact_RectimeChanged();
    partial void OnContact_ManinChargeChanging(string value);
    partial void OnContact_ManinChargeChanged();
    partial void OnContact_Mobile_ManinChaargeChanging(string value);
    partial void OnContact_Mobile_ManinChaargeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnIsDisableChanging(System.Nullable<bool> value);
    partial void OnIsDisableChanged();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    #endregion
		
		public Contact2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Contact_Id
		{
			get
			{
				return this._Contact_Id;
			}
			set
			{
				if ((this._Contact_Id != value))
				{
					this.OnContact_IdChanging(value);
					this.SendPropertyChanging();
					this._Contact_Id = value;
					this.SendPropertyChanged("Contact_Id");
					this.OnContact_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Name", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Contact_Name
		{
			get
			{
				return this._Contact_Name;
			}
			set
			{
				if ((this._Contact_Name != value))
				{
					this.OnContact_NameChanging(value);
					this.SendPropertyChanging();
					this._Contact_Name = value;
					this.SendPropertyChanged("Contact_Name");
					this.OnContact_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Mobile", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Contact_Mobile
		{
			get
			{
				return this._Contact_Mobile;
			}
			set
			{
				if ((this._Contact_Mobile != value))
				{
					this.OnContact_MobileChanging(value);
					this.SendPropertyChanging();
					this._Contact_Mobile = value;
					this.SendPropertyChanged("Contact_Mobile");
					this.OnContact_MobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Location", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Contact_Location
		{
			get
			{
				return this._Contact_Location;
			}
			set
			{
				if ((this._Contact_Location != value))
				{
					this.OnContact_LocationChanging(value);
					this.SendPropertyChanging();
					this._Contact_Location = value;
					this.SendPropertyChanged("Contact_Location");
					this.OnContact_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Contact_Phone
		{
			get
			{
				return this._Contact_Phone;
			}
			set
			{
				if ((this._Contact_Phone != value))
				{
					this.OnContact_PhoneChanging(value);
					this.SendPropertyChanging();
					this._Contact_Phone = value;
					this.SendPropertyChanged("Contact_Phone");
					this.OnContact_PhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Website", DbType="NVarChar(500)")]
		public string Contact_Website
		{
			get
			{
				return this._Contact_Website;
			}
			set
			{
				if ((this._Contact_Website != value))
				{
					this.OnContact_WebsiteChanging(value);
					this.SendPropertyChanging();
					this._Contact_Website = value;
					this.SendPropertyChanged("Contact_Website");
					this.OnContact_WebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Note", DbType="NVarChar(MAX)")]
		public string Contact_Note
		{
			get
			{
				return this._Contact_Note;
			}
			set
			{
				if ((this._Contact_Note != value))
				{
					this.OnContact_NoteChanging(value);
					this.SendPropertyChanging();
					this._Contact_Note = value;
					this.SendPropertyChanged("Contact_Note");
					this.OnContact_NoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Client_Type", DbType="Int NOT NULL")]
		public int Client_Type
		{
			get
			{
				return this._Client_Type;
			}
			set
			{
				if ((this._Client_Type != value))
				{
					this.OnClient_TypeChanging(value);
					this.SendPropertyChanging();
					this._Client_Type = value;
					this.SendPropertyChanged("Client_Type");
					this.OnClient_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Rectime", DbType="DateTime NOT NULL")]
		public System.DateTime Contact_Rectime
		{
			get
			{
				return this._Contact_Rectime;
			}
			set
			{
				if ((this._Contact_Rectime != value))
				{
					this.OnContact_RectimeChanging(value);
					this.SendPropertyChanging();
					this._Contact_Rectime = value;
					this.SendPropertyChanged("Contact_Rectime");
					this.OnContact_RectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_ManinCharge", DbType="NVarChar(50)")]
		public string Contact_ManinCharge
		{
			get
			{
				return this._Contact_ManinCharge;
			}
			set
			{
				if ((this._Contact_ManinCharge != value))
				{
					this.OnContact_ManinChargeChanging(value);
					this.SendPropertyChanging();
					this._Contact_ManinCharge = value;
					this.SendPropertyChanged("Contact_ManinCharge");
					this.OnContact_ManinChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact_Mobile_ManinChaarge", DbType="NVarChar(50)")]
		public string Contact_Mobile_ManinChaarge
		{
			get
			{
				return this._Contact_Mobile_ManinChaarge;
			}
			set
			{
				if ((this._Contact_Mobile_ManinChaarge != value))
				{
					this.OnContact_Mobile_ManinChaargeChanging(value);
					this.SendPropertyChanging();
					this._Contact_Mobile_ManinChaarge = value;
					this.SendPropertyChanged("Contact_Mobile_ManinChaarge");
					this.OnContact_Mobile_ManinChaargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDisable", DbType="Bit")]
		public System.Nullable<bool> IsDisable
		{
			get
			{
				return this._IsDisable;
			}
			set
			{
				if ((this._IsDisable != value))
				{
					this.OnIsDisableChanging(value);
					this.SendPropertyChanging();
					this._IsDisable = value;
					this.SendPropertyChanged("IsDisable");
					this.OnIsDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NVarChar(50)")]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _password;
		
		private System.Nullable<bool> _ISDisable;
		
		private System.Nullable<bool> _IsAdmin;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnISDisableChanging(System.Nullable<bool> value);
    partial void OnISDisableChanged();
    partial void OnIsAdminChanging(System.Nullable<bool> value);
    partial void OnIsAdminChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISDisable", DbType="Bit")]
		public System.Nullable<bool> ISDisable
		{
			get
			{
				return this._ISDisable;
			}
			set
			{
				if ((this._ISDisable != value))
				{
					this.OnISDisableChanging(value);
					this.SendPropertyChanging();
					this._ISDisable = value;
					this.SendPropertyChanged("ISDisable");
					this.OnISDisableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit")]
		public System.Nullable<bool> IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PagewUser")]
	public partial class PagewUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _pageID;
		
		private System.Nullable<int> _userid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnpageIDChanging(System.Nullable<int> value);
    partial void OnpageIDChanged();
    partial void OnuseridChanging(System.Nullable<int> value);
    partial void OnuseridChanged();
    #endregion
		
		public PagewUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageID", DbType="Int")]
		public System.Nullable<int> pageID
		{
			get
			{
				return this._pageID;
			}
			set
			{
				if ((this._pageID != value))
				{
					this.OnpageIDChanging(value);
					this.SendPropertyChanging();
					this._pageID = value;
					this.SendPropertyChanged("pageID");
					this.OnpageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Int")]
		public System.Nullable<int> userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class Page2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PageName;
		
		private string _URL;
		
		private System.Nullable<bool> _ISAll;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnURLChanging(string value);
    partial void OnURLChanged();
    partial void OnISAllChanging(System.Nullable<bool> value);
    partial void OnISAllChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public Page2()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(150)")]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URL", DbType="NVarChar(300)")]
		public string URL
		{
			get
			{
				return this._URL;
			}
			set
			{
				if ((this._URL != value))
				{
					this.OnURLChanging(value);
					this.SendPropertyChanging();
					this._URL = value;
					this.SendPropertyChanged("URL");
					this.OnURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISAll", DbType="Bit")]
		public System.Nullable<bool> ISAll
		{
			get
			{
				return this._ISAll;
			}
			set
			{
				if ((this._ISAll != value))
				{
					this.OnISAllChanging(value);
					this.SendPropertyChanging();
					this._ISAll = value;
					this.SendPropertyChanged("ISAll");
					this.OnISAllChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(400)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
